/**
 * This class is used to store information of some primitive type
 */
public class Container {
    private Object[] elements;
    private int size;
    private static final int INITIAL_CAPACITY = 10;

    /**
     * Constructor of an instance of the class
     */
    public Container() {
        elements = new Object[INITIAL_CAPACITY];
        size = 0;
    }

    /**
     *
     * @param element
     */
    public void add(Object element) {
        if (size == elements.length) {
            resize();
        }
        elements[size++] = element;
    }

    /**
     *
     * @param index
     * @return element with the demanded index
     * @thows an exception if the index is out of range
     */
    public Object get(int index) {
        if (index < 0 || index >= size) {
            throw new IndexOutOfBoundsException("Invalid index: " + index);
        }
        return elements[index];
    }

    /**
     * Deletes an element with the demanded index
     * @param index
     */
    public void remove(int index) {
        if (index < 0 || index >= size) {
            throw new IndexOutOfBoundsException("Invalid index: " + index);
        }
        for (int i = index; i < size - 1; i++) {
            elements[i] = elements[i + 1];
        }
        elements[--size] = null; // Удаляем ссылку на последний элемент
    }

    /**
     *
     * @return size of the array
     */
    public int getSize() {
        return size;
    }
    
    private void resize() {
        int newCapacity = elements.length * 2;
        Object[] newArray = new Object[newCapacity];
        System.arraycopy(elements, 0, newArray, 0, size);
        elements = newArray;
    }

    public static void main(String[] args) {
        Container container = new Container();
        container.add("Hello");
        container.add(42);
        container.add(3.14);

        System.out.println("Size: " + container.getSize());
        System.out.println("Element at index 1: " + container.get(1));

        container.remove(1);
        System.out.println("Size after removal: " + container.getSize());
        System.out.println("Element at index 1 after removal: " + container.get(1));
    }
}
